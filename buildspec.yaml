version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - echo Entered the installing phase...
      - apt install rsync -y
    finally:
      - echo This always runs even if the update or install command fails 
  pre_build:
    commands:
      - echo Entered the pre build phase...
      - npm prune
      - ls -lat
      - [ ! -d "dependencies/nodejs" ] &&  mkdir -p dependencies/nodejs
      - mkdir -p dependencies/nodejs
      - cd functions/sample-function
      - ls -lat
      - npm install
      # - pwd
      - ls -lat
      # - mv -uf package* node_modules ../../dependencies/nodejs
      - rsync -a package* node_modules/ ../../dependencies/nodejs/
      - rm -rf node_modules/*
      - ls -lat ../../dependencies/nodejs
    finally: 
      - echo This always runs even if the pre build phase commands fails
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - sam package --template-file ../../CFNTemplates/lambda-stack/template.yaml --output-template-file ./CFNTemplates/lambda-stack/packaged-template.yaml --region ap-southeast-1 --resolve-s3 
    finally: 
      - echo This always runs even if the build phase commands fails
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Entered the post_build phase...
      # - pwd
      # - sam deploy --template-file ./CFNTemplates/lambda-stack/template.yaml --stack-name sample-lambda-layer-stack --capabilities CAPABILITY_IAM --region ap-southeast-1
      
artifacts:
  files:
    - "../../CFNTemplates/lambda-stack/template.yaml"
  base-directory: build
  name: $timestamp.zip

cache:
  files:
    - '**/*'
